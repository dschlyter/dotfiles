#/bin/bash
# common shell settings that should work in both zsh and bash

#
# Variables and aliases
#

# Env Variables

export EDITOR="vim"
export VISUAL="vim"

export PATH="$HOME/bin:$PATH"

# Aliases

alias se='sudoedit'
alias ack='ack-grep'
alias serve='python -m SimpleHTTPServer'
alias vims='vim -S .vimsession'

## Flags on by default
alias ls='ls -h --color=auto --group-directories-first'
export TIME_STYLE=long-iso # iso8601 for ls
alias locate='locate -i'
alias mv='mv -i'
alias cp='cp -i'
alias tig='tig --all'

#
# Utility functions
#

# Override defaults

# Default to date -Is if no args are supplied
# iso-8601 is the one true date format
date() {
    BINARY=/bin/date
    BREW_BINARY=/usr/local/bin/gdate
    if [ -f $BREW_BINARY ]; then
        BINARY=$BREW_BINARY
    fi
    if [ "$*" ]; then
        $BINARY $*
    else
        $BINARY -Is
    fi
}


# Functional helpers

cl() {
    awk "{print \$$1}"
}

take() {
    head -n $1
}

drop() {
    tail -n +$(($1 + 1))
}

# Exploring the file system

md() {
    mkdir -p $1
    cd $1
}

# explore a file tree with a combined ls and cat
s() {
    if [ -d "$1" ]; then
        /bin/ls "$@"
    else
        cat "$@"
    fi
}

fixenc() {
    mv "$1" "$1.orig"
    iconv -f ISO-8859-1 -t UTF-8 "$1.orig" > "$1"
}

grab() {
    sudo chown -R ${USER} ${1:-.}
}

# allows one or multiple files to be "tagged"
# then used in other commands like: j otherdir; mv $=TAG .
tag() {
    if [[ "$@" == "" ]]; then
        echo "$TAG"
        return
    fi

    BASE=""
    if [[ "$1" == "-a" ]]; then
        BASE="$TAG\n"
        shift
    fi
    export TAG="$BASE$(realpath "$@")"
}
# a bit convoluted to work both in zsh and bash
alias cpt='echo "$TAG" | xargs -L 1 -i cp {} .'
alias mvt='echo "$TAG" | xargs -L 1 -i mv {} .'

# Various helpers

retry() {
    while true; do
        eval $* && return 0
        echo "Exit $? - Retrying in 1 second"
        sleep 1
    done
}

#
# Docker utils
#

if type docker-machine &> /dev/null; then
    docker() {
        unset -f docker
        echo Setting up docker-machine...
        docker-machine start default
        eval $(docker-machine env default --shell zsh)
        docker "$@"
    }
fi

alias d='docker'
alias dm='docker-machine'

dcleanup(){
    docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

dnuke() {
    docker ps | cl 1 | drop 1 | xargs --no-run-if-empty -n 1 docker kill
    dcleanup
}

#
# External libraries
#

# Autojump with z (pure sh implementation)
export _Z_CMD="j"
alias jc="j -c"
Z_SH=~/.z.sh
[ -f $Z_SH ] && source $Z_SH
