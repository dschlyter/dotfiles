[user]
	name = David Schlyter
	email = dschlyter@gmail.com
[color]
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = /home/david/.gitignore
[advice]
	statusHints = false
[branch]
    # When branching off a remote branch, automatically let the local branch track the remote branch
	autosetupmerge = true
    # Use rebase when pulling
	autosetuprebase = always
[diff]
	renames = copies
[push]
	default = tracking
# Enable the recording of resolved conflicts, so that identical hunks can be resolved automatically later on.
[rerere]
	enabled = true
[interactive]
    # remove need to press enter in interactive or add -p modes, requires library readkey to be installed
    singlekey = true
[alias]
    st = status -sb
    cm = commit -v
    br = branch
    rb = rebase
    co = checkout
    lg = log --color --graph --date=iso --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --all
    purge = !git branch -d $1 && git push origin --delete
    # add all changes interactively and then commit, including a hack to display and add untracked files
    pc = "!sh -c 'git ls-files --other --exclude-standard | while read f; do cat \"$f\"; echo \\\"$f\\\" | xargs -p git add; done; git add -p $@ && git commit -v || git reset' -"
    # --ammend to a previous commit below HEAD
    fixup = "!sh -c '(git diff-files --quiet || (echo Unstaged changes, please commit or stash with --keep-index; exit 1)) && COMMIT=$(git rev-parse $1) && git commit --fixup=$COMMIT && git rebase -i --autosquash $COMMIT~1' -"
[web]
	browser = google-chrome
