# display power management log for current day (mostly interesting for display lock / unlock times)
alias pmlog='open $(echo /var/log/powermanagement/2* | xargs -n 1 echo | tail -n 1)'
alias o='open'
alias rau='reattach-to-user-namespace'
alias ij='rau open -a "IntelliJ IDEA" .'
alias sshot='screencapture -T 2 -t png -P screenshot.png'

alias -g PC='| pbcopy'

# set iterm title to current dir
# credit to https://gist.github.com/phette23/5270658
precmd() {
    echo -ne "\e]1;${PWD##*/}\a"
}

# use updated coreutils and findutils from homebrew by default
function use_gnu() {
    type "g$1" > /dev/null && alias $1="g$1$2"
}

use_gnu wc
use_gnu sed
use_gnu sort
use_gnu tac
use_gnu ln
use_gnu du
use_gnu stat
use_gnu xargs
use_gnu cal

# these are fixed by functions in .shellrc
# use_gnu ls
# use_gnu cp

# quick hack to make writing shell functions easier (even if reusability/porability suffers)
# run the correct executable on any OS with ${GNU_PREFIX}ls
export GNU_PREFIX="g"

function handlemail() {
    cat /var/mail/$USER
    sudo rm /var/mail/$USER
}

# mutli-user brew can be a bit buggy, a hack to work around it
alias claimbrew="sudo chmod -R g+rw /usr/local; sudo chgrp -R brew /usr/local"

# multi-user spotify can be buggy
alias claimspotify="(cd /Applications; sudo find Spotify.app -exec chmod 755 {} \;)"
alias cliamspotify2='sudo find /Applications/Spotify.app -perm "+u+x" ! -perm "+o+x" -exec chmod og+x {} ;'

# brew convinience function
local BREW_UPDATE_FILE=/usr/local/.brew_lastupdate
alias bup="brew update && brew upgrade && date +%s > $BREW_UPDATE_FILE"

local NOW="$(date +%s)"
local LAST_UPDATE="0$(cat $BREW_UPDATE_FILE)"
local DIFF_DAYS=$((($NOW - $LAST_UPDATE) / (3600 * 24)))
if [ $DIFF_DAYS -gt 7 ]; then
    echo "Homebrew has not been upgraded in $DIFF_DAYS days. Run upgrade with 'bup'"
fi
