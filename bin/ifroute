#!/bin/bash

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

usage() {
    echo "Usage: ifroute [options] host/subnet interface"
    echo "Creates a route to the specified host/subnet using the specified interface (using ipv4 only for now)"
    echo "This can be useful when there is an IP-conflict on two different network interfaces"
    echo
    echo "Available option flags:"
    echo "-r recreate, delete then recreate route"
    echo "-d delete route"
    echo
    echo "Inspect the routes with"
    echo "route get <host>"
    echo "netstat -nr -f inet"
}

if [ "$(uname -s)" != "Darwin" ]; then
    echo "This script is for macOS only"
    exit 0
fi

CREATE="1"
DELETE=""
while getopts ":hrd" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        r)
            DELETE="1"
            ;;
        d)
            DELETE="1"
            CREATE=""
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

HOST="${1:-}"
IFACE="${2:-}"

if [[ -z "$HOST" || -z "$IFACE" && -n "$CREATE" ]]; then
    usage
    exit 0
fi

if [ -n "$DELETE" ]; then
    sudo route delete "$HOST"
fi

if [ -n "$CREATE" ]; then
    GATEWAY_IP="$(netstat -nr -f inet | grep default | grep "$IFACE" | head -n 1 | awk '{print $2}')"

    if [ -z "$GATEWAY_IP" ]; then
        echo "Unable to find gateway ip for interface $IFACE. Inspect the routing table with netstat -nr -f inet"
        exit 1
    fi

    sudo route add "$HOST" "$GATEWAY_IP"
fi
