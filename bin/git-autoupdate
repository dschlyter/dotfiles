#!/bin/bash

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

echo "Autoupdating git repos $(date)"

GIT_AUTOUPDATE_REPOS="$HOME/.dotfiles
$HOME/code/scripts
$HOME/code/server-setup
$(cat $HOME/.git_autoupdate || true)"

echo $GIT_AUTOUPDATE_REPOS

# key file for read-only access to private repos
KEY_FILE="$HOME/.ssh/autoupdate_rsa"
if [ -f "$KEY_FILE" ]; then
    KRYPTON_OVERRIDE_CONFIG="$HOME/.ssh/config_nokrypton"
    if [[ -f "$KRYPTON_OVERRIDE_CONFIG" ]]; then
        KRYPTON_OVERRIDE=" -F $KRYPTON_OVERRIDE_CONFIG"
    fi

    export GIT_SSH_COMMAND="ssh -i $KEY_FILE${KRYPTON_OVERRIDE:-}"
    echo $GIT_SSH_COMMAND
fi

for repo in $GIT_AUTOUPDATE_REPOS; do
    if [ -d "$repo" ]; then
        (
            cd $repo

            echo Updating $repo
            # all github repos used for auto-update are public, so this rewrite is good enough for now
            ORIGIN="$(git remote get-url origin | sed -E 's,git@github.com:(.*)[.]git,https://github.com/\1,')"
            git fetch -f "$ORIGIN" master:autoupdate
            git merge --ff-only autoupdate
            # make sure origin/master ref is up to date
            git fetch "$ORIGIN"
        ) || true
    else
        echo Skipping $repo - no such repo
    fi
done
