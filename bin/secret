#!/bin/bash

# Encrypt and decrypt using ssh key

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

usage() {
    echo "Usage: $0 encrypt|decrypt key"
    echo "Note: key should be public ssh key when encrypting and private when decrypting"
}

if [[ -z "${2:-}" ]]; then
    usage
    exit 1
fi

cmd="$1"
ssh_key="$2"

if [[ "$cmd" == "encrypt" ]]; then
    tmp="/var/tmp/tmp-secret-key-$$"
    ssh-keygen -f "$ssh_key" -e -m PKCS8 > "$tmp"
    if [[ -t 1 ]]; then
        printf "message to encrypt:"
    fi
    read message
    encrypted=$(openssl rsautl -encrypt -pubin -inkey "$tmp" -in <(echo $message) | base64)
    rm "$tmp"

    if [[ -t 1 ]]; then
        echo "Decrypt with: echo \"$encrypted\" | base64 --decode | openssl rsautl -decrypt -inkey ~/.ssh/id_rsa"
    else
        echo "$encrypted"
    fi
elif [[ "$cmd" == "decrypt" ]]; then
    if [[ -t 1 ]]; then
        printf "message to decrypt:"
    fi
    read message
    echo "$message" | base64 --decode | openssl rsautl -decrypt -inkey ~/.ssh/"$key"
else
    usage
fi
